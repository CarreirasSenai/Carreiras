const transporter = require('../services/nodemailer');
const RedefinirSenha = require('../model/redefinirSenha');
const bcrypt = require('bcryptjs');

exports.enviarCodigo = (req, res) => {
    // Recebe o email da requisi칞칚o
    const { email, grupo } = req.body;

    RedefinirSenha.validaUser(email, grupo, (err, dados) => {
        if (err) {
            console.log(err.message);
            return res.status(500).json({ error: err.message });
        }

        if (dados === null) {
            return res.status(401).json({ error: 'N칚o h치 usu치rio com este e-mail!' });
        } else {

            // Gera c칩digo de redefini칞칚o de 6 digitos
            var codigo = '';
            for (let i = 0; i < 6; i++) {
                let random;
                random = Math.floor(Math.random() * 10);
                codigo += random.toString();
            }

            // Guarda email e c칩digo no objeto 'redefinicao' dentro da sess칚o
            req.session.redefinicao = {
                email: email,
                codigo: codigo
            }

            // Mensagem do email de redefini칞칚o
            const corpo =
                `
                <div style="font-family: Arial, Helvetica, sans-serif; 
                    text-align: center; 
                    display: flex; 
                    flex-direction: column; 
                    justify-content: center; 
                    align-items: center;">
                    <div style="text-align: center;
                    width: 100%;">
                        <hr>
                        <h1 style="color: #333;">Carreiras 游냏</h1>
                        <div style="background: linear-gradient(to right, #6f00ff, #9341ff);
                            padding: 50px;
                            color: white;
                            box-shadow: 0 1px 4px #333;">
                            <div>Foi solicitado uma redefini칞칚o de senha para este endere칞o de e-mail.</div>
                            <br><br>
                            <div>O c칩digo para redefini칞칚o 칠</div>
                            <strong>${codigo}</strong>
                            <br><br><br>
                            <div>Caso voc칡 n칚o tenha feito a solicita칞칚o, desconsidere este e-mail.</div>
                            <br><br>
                            <div>
                                Atenciosamente, Carreiras. <br>
                                <small><a href="https://www.carreiras.com.br" target="_blank"
                                        style="color: white;">www.carreiras.com.br</a></small>
                            </div>
                        </div>
                        <br>
                        <hr>
                    </div>
                </div>
            `;

            // Fun칞칚o ASS칈NCRONA!! para disparar email
            async function main() {
                const info = await transporter.sendMail({
                    from: '"Carreiras" <carreirassenai@gmail.com>', // Remetente
                    to: email, // Destin치tario
                    subject: "Redefini칞칚o de Senha", // T칤tulo
                    html: corpo // Email
                });

                console.log("Message sent:", info.accepted);
            }
            main().catch(console.error); // Executa a fun칞칚o

            res.json({ codido: codigo }); // Envia resposta da requisi칞칚o
        }
    });
}

exports.validarCodigo = (req, res) => {
    const { email, grupo, codigo } = req.body;
    console.log(email);
    console.log(grupo);
    console.log(codigo);

    RedefinirSenha.validaUser(email, grupo, (err, dados) => {
        if (err) {
            console.log(err.message);
            return res.status(500).json({ error: err.message });
        }

        if (dados === null) {
            return res.status(401).json({ error: 'N칚o h치 usu치rio com este e-mail!' });
        }

        console.log(req.session.redefinicao)

        // V치lida o c칩digo e o email
        if (email === req.session.redefinicao.email && codigo === req.session.redefinicao.codigo) {
            return res.json({ success: true, dados: dados })
        } else {
            return res.status(404).json({ error: 'C칩digo incorreto!' })
        }
    });
}

exports.redefinirSenha = async (req, res) => {
    const { dados, novaSenha } = req.body;

    // Gerar um salt e hash a senha
    const saltRounds = 10;
    const hashedPassword = await bcrypt.hash(novaSenha, saltRounds);

    RedefinirSenha.redefinirSenha(dados, hashedPassword, (err, result) => {
        if (err) {
            console.log(err.message);
            return res.status(500).json({ error: err.message });
        } else {
            console.log(result);
            res.json({ success: true, result: result });
        }
    });
};